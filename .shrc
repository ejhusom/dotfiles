# File:         .shrc
# Author:       Erik Johannes Husom
# Description:  General shell configuration.
# ============================================================================
# Get name of OS, for use in later case testes
uname_out="$(uname -s)"

HISTSIZE=1500
SAVEHIST=1500

# Add to PATH{{{
# set PATH so it includes bin from dotfiles
if [ -d "$HOME/dotfiles/bin" ] ; then
    PATH="$HOME/dotfiles/bin:$PATH"
    export PATH
fi

if [ -d "$HOME/dotfiles-private/bin" ] ; then
    PATH="$HOME/dotfiles-private/bin:$PATH"
    export PATH
fi

# set PATH so it includes ~/Applications if it exists
if [ -d "$HOME/Applications" ] ; then
    PATH="$HOME/Applications:$PATH"
    export PATH
fi
#}}}

# Add private config{{{
if [ -r ~/dotfiles-private ]; then
   source ~/dotfiles-private/.shrc
fi
if [ -d "$HOME/dotfiles-private/bin" ] ; then
    PATH="$HOME/dotfiles-private/bin:$PATH"
    export PATH
fi
#}}}

# Aliases{{{

# general shortcuts{{{
alias x='exit'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias v='vim'
alias ll='ls -AhlF'  # human-readable file size
# alias ll='ls -alF --block-size=1K'  # show file size in kB
alias la='ls -A'
alias l='ls -CF'
#}}}

# git aliases{{{
alias g='git status'
alias ga='git add'
alias gc='git commit'
alias gcm='git commit -m'
alias gd='git diff'
alias gp='git push'
alias gpl='git pull'
alias gl='git log --graph --oneline' # show git log as graph
alias gall="find . -maxdepth 1 -mindepth 1 -type d -exec sh -c '(echo {} && \
    cd {} && git status -s && echo)' \;" # check git status of all subfolders
# git pull on all subfolders:
alias gplall="find . -maxdepth 1 -mindepth 1 -type d -exec sh -c '(echo {} && \
    cd {} && git pull && echo)' \;"
#}}}

case "${uname_out}" in
    Linux*)
        alias open='xdg-open' ;;
    Darwin*)
        alias ctags="`brew --prefix`/bin/ctags"
        alias xdg-open="open" 
        alias chrome="open -a 'Google Chrome'"
        alias chromium="open -a 'Chromium'"
        alias vscode="open -a 'Visual Studio Code'"
        alias vscodium="open -a 'VSCodium'" ;;
esac


#}}}

# homebrew stuff{{{
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_AUTO_UPDATE=1
#}}}

# nnn file browser{{{
export NNN_USE_EDITOR=1
export EDITOR="vim"
export VISUAL="vim"

n ()
{
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # The default behaviour is to cd on quit (nnn checks if NNN_TMPFILE is set)
    # To cd on quit only on ^G, remove the "export" as in:
    #     NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    # NOTE: NNN_TMPFILE is fixed, should not be modified
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    nnn "$@" -e

    if [ -f "$NNN_TMPFILE" ]; then
            . "$NNN_TMPFILE"
            rm -f "$NNN_TMPFILE" > /dev/null
    fi
}
# }}}

# add gnu coreutils{{{
# export PATH="$(brew --prefix coreutils)/libexec/gnubin:/usr/local/bin:$PATH"
#}}}

# adb fastboot{{{
if [ -d "$HOME/Downloads/platform-tools" ] ; then
 export PATH="$HOME/Downloads/platform-tools:$PATH"
fi
#}}}

# Ruby and Jekyll{{{
export PATH="/usr/local/opt/ruby/bin:$PATH"
export PATH="$HOME/.gem/ruby/X.X.0/bin:$PATH"
export PATH="/Users/erikjohannes/.gem/ruby/2.7.0/bin:$PATH"
#}}}

export PATH=$PATH:~/Library/Python/3.7/bin:$PATH

